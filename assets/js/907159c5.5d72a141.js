"use strict";(self.webpackChunkgincumentation=self.webpackChunkgincumentation||[]).push([[759],{9117:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var t=i(5893),o=i(1151);const s={sidebar_position:1},r="Routing",a={id:"http/routing",title:"Routing",description:"Gin's routing function is a fundamental aspect of the framework, allowing developers to define how the application responds to different HTTP requests (like GET, POST, etc.) on specific routes (URL paths).",source:"@site/docs/http/routing.md",sourceDirName:"http",slug:"/http/routing",permalink:"/gincumentation/docs/http/routing",draft:!1,unlisted:!1,editUrl:"https://github.com/filipenevs/gincumentation/tree/main/docs/http/routing.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"apiSidebar",previous:{title:"HTTP",permalink:"/gincumentation/docs/category/http-1"},next:{title:"Context",permalink:"/gincumentation/docs/http/context"}},d={},c=[{value:"Overview",id:"overview",level:2},{value:"Defining Routes",id:"defining-routes",level:2},{value:"Examples of Route Definitions",id:"examples-of-route-definitions",level:2},{value:"Static Route",id:"static-route",level:3},{value:"Dynamic Route",id:"dynamic-route",level:3},{value:"Advanced Routing",id:"advanced-routing",level:2},{value:"Route Groups",id:"route-groups",level:3},{value:"Nested Route Groups",id:"nested-route-groups",level:3},{value:"HTTP Method Combination",id:"http-method-combination",level:3}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"routing",children:"Routing"}),"\n",(0,t.jsx)(n.p,{children:"Gin's routing function is a fundamental aspect of the framework, allowing developers to define how the application responds to different HTTP requests (like GET, POST, etc.) on specific routes (URL paths)."}),"\n",(0,t.jsx)(n.p,{children:"Gin's routing is designed for high performance, making it an excellent choice for high-load applications."}),"\n",(0,t.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Purpose:"})," Routing in Gin is used to match incoming HTTP requests to specific handlers based on the URL path and the HTTP method."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Handlers:"})," A handler is a function that Gin calls when it matches a route. These functions receive a ",(0,t.jsx)(n.a,{href:"./context",children:"Context"})," object which is used to access request data, write responses, and more."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"defining-routes",children:"Defining Routes"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Basic Syntax:"})," In Gin, routes are defined using methods on the *gin.Engine instance (commonly initialized as ",(0,t.jsx)(n.code,{children:"r := gin.Default()"}),"). Each method corresponds to an HTTP method."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Route Patterns:"})," You can define static routes (like ",(0,t.jsx)(n.code,{children:"/users"}),") and dynamic routes (like ",(0,t.jsx)(n.code,{children:"/users/:id"})," where ",(0,t.jsx)(n.code,{children:":id"})," is a variable)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Handlers:"})," For each route, you assign a handler function. This function will be called whenever the route is accessed with the corresponding HTTP method."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"examples-of-route-definitions",children:"Examples of Route Definitions"}),"\n",(0,t.jsx)(n.h3,{id:"static-route",children:"Static Route"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'r.GET("/ping", func(c *gin.Context) {\n    c.JSON(http.StatusOK, gin.H{"message": "pong"})\n})\n'})}),"\n",(0,t.jsx)(n.h3,{id:"dynamic-route",children:"Dynamic Route"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'r.GET("/users/:id", func(c *gin.Context) {\n  id := c.Param("id")\n  c.JSON(http.StatusOK, gin.H{"user_id": id})\n})\n'})}),"\n",(0,t.jsx)(n.h2,{id:"advanced-routing",children:"Advanced Routing"}),"\n",(0,t.jsx)(n.h3,{id:"route-groups",children:"Route Groups"}),"\n",(0,t.jsx)(n.p,{children:"Group related routes together. This is useful for applying common middleware or a common path prefix."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'// Simple group: v1\nv1 := r.Group("/v1")\n{\n  v1.POST("/login", loginEndpoint)\n  v1.POST("/submit", submitEndpoint)\n  v1.POST("/read", readEndpoint)\n}\n\n// Simple group: v2\nv2 := r.Group("/v2")\n{\n  v2.POST("/login", loginEndpoint)\n  v2.POST("/submit", submitEndpoint)\n  v2.POST("/read", readEndpoint)\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"nested-route-groups",children:"Nested Route Groups"}),"\n",(0,t.jsx)(n.p,{children:"You can create nested route groups to organize your routes hierarchically, which is useful for larger applications with multiple sub-sections."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'api := r.Group("/api")\n{\n  v1 := api.Group("/v1")\n  {\n    v1.GET("/users", getUsersV1)\n    v1.POST("/users", createUserV1)\n  }\n\n  v2 := api.Group("/v2")\n  {\n    v2.GET("/users", getUsersV2)\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"http-method-combination",children:"HTTP Method Combination"}),"\n",(0,t.jsx)(n.p,{children:"Define a single handler for multiple methods."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-go",children:'r.Any("/any", anyHandler)\n'})})]})}function u(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},1151:(e,n,i)=>{i.d(n,{Z:()=>a,a:()=>r});var t=i(7294);const o={},s=t.createContext(o);function r(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);