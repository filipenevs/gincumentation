"use strict";(self.webpackChunkgincumentation=self.webpackChunkgincumentation||[]).push([[267],{3147:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>d});var i=t(5893),a=t(1151);const s={sidebar_position:4},l="Layouts",o={id:"views-and-templates/layouts",title:"Layouts",description:"In web development layouts play a crucial role in creating a consistent structure across various pages of an application. A layout usually refers to a base template that defines the common structure (like headers, footers, navigation bars) and placeholders for inserting page-specific content. This approach promotes reusability and maintainability.",source:"@site/docs/views-and-templates/layouts.md",sourceDirName:"views-and-templates",slug:"/views-and-templates/layouts",permalink:"/gincumentation/docs/views-and-templates/layouts",draft:!1,unlisted:!1,editUrl:"https://github.com/filipenevs/gincumentation/tree/main/docs/views-and-templates/layouts.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"apiSidebar",previous:{title:"Partials",permalink:"/gincumentation/docs/views-and-templates/partials"},next:{title:"Benchmarks",permalink:"/gincumentation/docs/benchmarks"}},r={},d=[{value:"Understanding Layouts",id:"understanding-layouts",level:2},{value:"What is a Layout?",id:"what-is-a-layout",level:3},{value:"Purpose of Using Layouts",id:"purpose-of-using-layouts",level:3},{value:"Creating a Base Layout",id:"creating-a-base-layout",level:2},{value:"Defining a Base Layout:",id:"defining-a-base-layout",level:3},{value:"Using the Layout in Views",id:"using-the-layout-in-views",level:2},{value:"Creating Page-Specific Templates (Views)",id:"creating-page-specific-templates-views",level:3},{value:"Rendering Views with the Layout",id:"rendering-views-with-the-layout",level:3},{value:"Loading and Rendering in Gin",id:"loading-and-rendering-in-gin",level:2},{value:"Loading Templates and Layouts",id:"loading-templates-and-layouts",level:3},{value:"Rendering a View with a Layout",id:"rendering-a-view-with-a-layout",level:3}];function c(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"layouts",children:"Layouts"}),"\n",(0,i.jsx)(n.p,{children:"In web development layouts play a crucial role in creating a consistent structure across various pages of an application. A layout usually refers to a base template that defines the common structure (like headers, footers, navigation bars) and placeholders for inserting page-specific content. This approach promotes reusability and maintainability."}),"\n",(0,i.jsx)(n.h2,{id:"understanding-layouts",children:"Understanding Layouts"}),"\n",(0,i.jsx)(n.h3,{id:"what-is-a-layout",children:"What is a Layout?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"A layout is a template that serves as the foundational structure for other templates (views). It typically includes elements that are common across multiple pages, such as headers, footers, and navigation menus."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"purpose-of-using-layouts",children:"Purpose of Using Layouts"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Layouts prevent repetition of common HTML structures and provide a unified look and feel across the application."}),"\n",(0,i.jsx)(n.li,{children:"They allow changes in the common structure to be made in one place, reflecting across all pages using the layout."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"creating-a-base-layout",children:"Creating a Base Layout"}),"\n",(0,i.jsx)(n.h3,{id:"defining-a-base-layout",children:"Defining a Base Layout:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"The base layout is a standard HTML file with Go's template directives to define where page-specific content will go."}),"\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.code,{children:'{{ define "layoutName" }} ... {{ end }}'})," to define a layout and ",(0,i.jsx)(n.code,{children:'{{ template "content" . }}'})," to indicate where to inject content."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",metastring:'title="layout.tmpl"',children:'// highlight-start\n{{ define "layout" }}\n// highlight-end\n<html>\n<head>\n  <title>{{ .Title }}</title>\n  \x3c!-- Other head elements --\x3e\n</head>\n<body>\n  <header>\x3c!-- Header content --\x3e</header>\n  <main>\n    // highlight-start\n    {{ template "content" . }}\n    // highlight-end\n  </main>\n  <footer>\x3c!-- Footer content --\x3e</footer>\n</body>\n</html>\n{{ end }}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"using-the-layout-in-views",children:"Using the Layout in Views"}),"\n",(0,i.jsx)(n.h3,{id:"creating-page-specific-templates-views",children:"Creating Page-Specific Templates (Views)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:['Views are templates for individual pages. They define the "content" block that the base layout will render in its ',(0,i.jsx)(n.code,{children:'{{ template "content" . }}'})," placeholder."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",metastring:'title="home.tmpl"',children:'{{ define "content" }}\n  <h1>Welcome to the Home Page</h1>\n  <p>This is the main content for the Home Page.</p>\n{{ end }}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"rendering-views-with-the-layout",children:"Rendering Views with the Layout"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"When rendering a view in Gin, the layout will wrap around the view's content, forming a complete HTML page."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"loading-and-rendering-in-gin",children:"Loading and Rendering in Gin"}),"\n",(0,i.jsx)(n.h3,{id:"loading-templates-and-layouts",children:"Loading Templates and Layouts"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["In Gin, use ",(0,i.jsx)(n.code,{children:"LoadHTMLGlob"})," or ",(0,i.jsx)(n.code,{children:"LoadHTMLFiles"})," to load both your layouts and views."]}),"\n",(0,i.jsx)(n.li,{children:"Gin will parse these templates and understand the relationship between layouts and views."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"rendering-a-view-with-a-layout",children:"Rendering a View with a Layout"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["When handling a request, use ",(0,i.jsx)(n.code,{children:"c.HTML"})," to render the view. Gin automatically combines the view with the specified layout."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'router.GET("/", func(c *gin.Context) {\n  c.HTML(http.StatusOK, "home.tmpl", gin.H{\n    "Title": "Home Page",\n  })\n})\n'})}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.admonition,{title:"Best Practices",type:"tip",children:(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Consistent Placeholder Names:"}),' Use consistent names like "content" for the main content placeholder across all layouts.']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Modularize:"})," Break down complex layouts into smaller, reusable components (partials) for better organization."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Clear Structure:"})," Keep the layout structure clear and logical, reflecting the overall structure of your web pages."]}),"\n"]})})]})}function u(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>l});var i=t(7294);const a={},s=i.createContext(a);function l(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);